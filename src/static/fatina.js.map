{"version":3,"sources":["webpack://Fatina/webpack/universalModuleDefinition","webpack://Fatina/webpack/bootstrap","webpack://Fatina/./src/easing/easing.ts","webpack://Fatina/./src/easing/easingType.ts","webpack://Fatina/./src/fatina.ts","webpack://Fatina/./src/index.ts","webpack://Fatina/./src/preset.ts","webpack://Fatina/./src/ticker.ts","webpack://Fatina/./src/tweens/baseTween.ts","webpack://Fatina/./src/tweens/callback.ts","webpack://Fatina/./src/tweens/delay.ts","webpack://Fatina/./src/tweens/sequence.ts","webpack://Fatina/./src/tweens/tween.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb,8CAA8C,cAAcvOa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;;;;;;;;;;;;;AC1CjD;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,gBAAgB,mBAAO,CAAC,6CAAgB;AACxC,mBAAmB,mBAAO,CAAC,mDAAmB;AAC9C,gBAAgB,mBAAO,CAAC,6CAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gJAAgJ,gBAAgB;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAiC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB,kBAAkB,oBAAoB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtca;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,iCAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,uDAAqB;AAChD,8CAA8C,qCAAqC,gCAAgC,EAAE,EAAE;;;;;;;;;;;;;ACb1G;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,+CAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,0BAA0B;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA;AACA;AACA,iBAAiB;AACjB,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA,sBAAsB;AACtB,kEAAkE,4BAA4B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,0BAA0B;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC9Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ha;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzVa;AACb,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,8CAAa;AACzC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,8CAAa;AACzC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDa;AACb,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,8CAAa;AACzC,mBAAmB,mBAAO,CAAC,4CAAY;AACvC,gBAAgB,mBAAO,CAAC,sCAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Sa;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C,oBAAoB,mBAAO,CAAC,8CAAa;AACzC,mBAAmB,mBAAO,CAAC,4CAAY;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,gBAAgB;AACheAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fatina.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fatina\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fatina\"] = factory();\n\telse\n\t\troot[\"Fatina\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.easeNames = void 0;\r\n/**\r\n * List of easing method\r\n *\r\n * Mostly based on http://easings.net/\r\n */\r\n// tslint:disable:no-parameter-reassignment\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n * @readonly\r\n */\r\nconst PI = Math.PI;\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n * @readonly\r\n */\r\nconst PI_OVER_TWO = Math.PI / 2;\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n * @readonly\r\n */\r\nconst BACK = 1.70158;\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n * @readonly\r\n */\r\nconst e = {};\r\n// Linear\r\ne.linear = (t) => {\r\n    return t;\r\n};\r\n// Quad\r\ne.inQuad = (t) => {\r\n    return t * t;\r\n};\r\ne.outQuad = (t) => {\r\n    return 2 * t - t * t;\r\n};\r\ne.inOutQuad = (t) => {\r\n    if (t < 0.5) {\r\n        return 2 * t * t;\r\n    }\r\n    else {\r\n        return 2 * (2 * t - t * t) - 1;\r\n    }\r\n};\r\n// Cubic\r\ne.inCubic = (t) => {\r\n    return t * t * t;\r\n};\r\ne.outCubic = (t) => {\r\n    return 3 * t - 3 * t * t + t * t * t;\r\n};\r\ne.inOutCubic = (t) => {\r\n    if (t < 0.5) {\r\n        return 4 * t * t * t;\r\n    }\r\n    else {\r\n        return 4 * (3 * t - 3 * t * t + t * t * t) - 3;\r\n    }\r\n};\r\n// Quart\r\ne.inQuart = (t) => {\r\n    return t * t * t * t;\r\n};\r\ne.outQuart = (t) => {\r\n    const t2 = t * t;\r\n    return 4 * t - 6 * t2 + 4 * t2 * t - t2 * t2;\r\n};\r\ne.inOutQuart = (t) => {\r\n    if (t < 0.5) {\r\n        return 8 * t * t * t * t;\r\n    }\r\n    else {\r\n        const t2 = t * t;\r\n        return 8 * (4 * t - 6 * t2 + 4 * t2 * t - t2 * t2) - 7;\r\n    }\r\n};\r\n// Sine\r\ne.inSine = (t) => {\r\n    if (t === 1) {\r\n        return 1;\r\n    }\r\n    return 1 - Math.cos(PI_OVER_TWO * t);\r\n};\r\ne.outSine = (t) => {\r\n    return Math.sin(PI_OVER_TWO * t);\r\n};\r\ne.inOutSine = (t) => {\r\n    if (t < 0.5) {\r\n        return (1 - Math.cos(PI * t)) / 2;\r\n    }\r\n    else {\r\n        return (1 + Math.sin(PI * (t - 0.5))) / 2;\r\n    }\r\n};\r\n// Circular\r\ne.inCirc = (t) => {\r\n    return 1 - Math.sqrt(1 - Math.pow(t, 2));\r\n};\r\ne.outCirc = (t) => {\r\n    return Math.sqrt(1 - Math.pow(1 - t, 2));\r\n};\r\ne.inOutCirc = (t) => {\r\n    if (t < 0.5) {\r\n        return (1 - Math.sqrt(1 - 4 * t * t)) / 2;\r\n    }\r\n    else {\r\n        return (1 + Math.sqrt(-3 + 8 * t - 4 * t * t)) / 2;\r\n    }\r\n};\r\n// Quint\r\ne.inQuint = (t) => {\r\n    return t * t * t * t * t;\r\n};\r\ne.outQuint = (t) => {\r\n    return --t * t * t * t * t + 1;\r\n};\r\ne.InOutQuint = (t) => {\r\n    t *= 2;\r\n    if (t < 1) {\r\n        return 0.5 * t * t * t * t * t;\r\n    }\r\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n};\r\n// Exponential\r\ne.inExponential = (t) => {\r\n    if (t === 1) {\r\n        return 1;\r\n    }\r\n    return t === 0 ? 0 : Math.pow(1024, t - 1);\r\n};\r\ne.outExponential = (t) => {\r\n    return t === 1 ? 1 : 1 - Math.pow(2, -10 * t);\r\n};\r\ne.inOutExponential = (t) => {\r\n    if (t === 0) {\r\n        return 0;\r\n    }\r\n    if (t === 1) {\r\n        return 1;\r\n    }\r\n    t *= 2;\r\n    if (t < 1) {\r\n        return 0.5 * Math.pow(1024, t - 1);\r\n    }\r\n    return 0.5 * (-Math.pow(2, -10 * (t - 1)) + 2);\r\n};\r\n// Elastic\r\ne.inElastic = (t) => {\r\n    if (t === 0) {\r\n        return 0;\r\n    }\r\n    return -Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI);\r\n};\r\ne.outElastic = (t) => {\r\n    if (t === 1) {\r\n        return 1;\r\n    }\r\n    return Math.pow(2, -10 * t) * Math.sin((t - 0.1) * 5 * Math.PI) + 1;\r\n};\r\ne.inOutElastic = (t) => {\r\n    if (t === 0) {\r\n        return 0;\r\n    }\r\n    if (t === 1) {\r\n        return 1;\r\n    }\r\n    t *= 2;\r\n    if (t < 1) {\r\n        return -0.5 * Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI);\r\n    }\r\n    return 0.5 * Math.pow(2, -10 * (t - 1)) * Math.sin((t - 1.1) * 5 * Math.PI) + 1;\r\n};\r\n// Back\r\ne.inBack = (t) => {\r\n    const s = BACK;\r\n    if (t === 0) {\r\n        return 0;\r\n    }\r\n    return t === 1 ? 1 : t * t * ((s + 1) * t - s);\r\n};\r\ne.outBack = (t) => {\r\n    const s = BACK;\r\n    return t === 0 ? 0 : --t * t * ((s + 1) * t + s) + 1;\r\n};\r\ne.inOutBack = (t) => {\r\n    const s = BACK * 1.525;\r\n    t *= 2;\r\n    if (t === 0) {\r\n        return 0;\r\n    }\r\n    if (t < 1) {\r\n        return 0.5 * (t * t * ((s + 1) * t - s));\r\n    }\r\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\r\n};\r\n// Bounce\r\ne.outBounce = (t) => {\r\n    if (t < (1 / 2.75)) {\r\n        return 7.5625 * t * t;\r\n    }\r\n    else if (t < (2 / 2.75)) {\r\n        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n    }\r\n    else if (t < (2.5 / 2.75)) {\r\n        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n    }\r\n    else {\r\n        return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n    }\r\n};\r\ne.inBounce = (t) => {\r\n    return 1 - e.outBounce(1 - t);\r\n};\r\ne.inOutBounce = (t) => {\r\n    if (t < 0.5) {\r\n        return e.inBounce(t * 2) * 0.5;\r\n    }\r\n    return e.outBounce(t * 2 - 1) * 0.5 + 0.5;\r\n};\r\nexports.easeNames = e;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EasingType = void 0;\r\n/**\r\n * List of all easing methods\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nvar EasingType;\r\n(function (EasingType) {\r\n    EasingType[\"Linear\"] = \"linear\";\r\n    EasingType[\"InQuad\"] = \"inQuad\";\r\n    EasingType[\"OutQuad\"] = \"outQuad\";\r\n    EasingType[\"InOutQuad\"] = \"inOutQuad\";\r\n    EasingType[\"InCubic\"] = \"inCubic\";\r\n    EasingType[\"OutCubic\"] = \"outCubic\";\r\n    EasingType[\"InOutCubic\"] = \"inOutCubic\";\r\n    EasingType[\"InQuart\"] = \"inQuart\";\r\n    EasingType[\"OutQuart\"] = \"outQuart\";\r\n    EasingType[\"InOutQuart\"] = \"inOutQuart\";\r\n    EasingType[\"InSine\"] = \"inSine\";\r\n    EasingType[\"OutSine\"] = \"outSine\";\r\n    EasingType[\"InOutSine\"] = \"inOutSine\";\r\n    EasingType[\"InCirc\"] = \"inCirc\";\r\n    EasingType[\"OutCirc\"] = \"outCirc\";\r\n    EasingType[\"InOutCirc\"] = \"inOutCirc\";\r\n    EasingType[\"InQuint\"] = \"inQuint\";\r\n    EasingType[\"OutQuint\"] = \"outQuint\";\r\n    EasingType[\"InOutQuint\"] = \"inOutQuint\";\r\n    EasingType[\"InExponential\"] = \"inExponential\";\r\n    EasingType[\"OutExponential\"] = \"outExponential\";\r\n    EasingType[\"InOutExponential\"] = \"inOutExponential\";\r\n    EasingType[\"InElastic\"] = \"inElastic\";\r\n    EasingType[\"OutElastic\"] = \"outElastic\";\r\n    EasingType[\"InOutElastic\"] = \"inOutElastic\";\r\n    EasingType[\"InBack\"] = \"inBack\";\r\n    EasingType[\"OutBack\"] = \"outBack\";\r\n    EasingType[\"InOutBack\"] = \"inOutBack\";\r\n    EasingType[\"InBounce\"] = \"inBounce\";\r\n    EasingType[\"OutBounce\"] = \"outBounce\";\r\n    EasingType[\"InOutBounce\"] = \"inOutBounce\";\r\n})(EasingType = exports.EasingType || (exports.EasingType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Fatina = void 0;\r\nconst preset_1 = require(\"./preset\");\r\nconst ticker_1 = require(\"./ticker\");\r\nconst delay_1 = require(\"./tweens/delay\");\r\nconst sequence_1 = require(\"./tweens/sequence\");\r\nconst tween_1 = require(\"./tweens/tween\");\r\n/**\r\n * This part manage the auto-update loop if necessary (browser only)\r\n */\r\n/**\r\n * @ignore\r\n * @private\r\n */\r\nlet lastFrame;\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n */\r\nlet raf;\r\n/**\r\n * @ignore\r\n * @private\r\n * @const\r\n */\r\nlet cancelFrame;\r\nif (typeof (window) !== 'undefined') {\r\n    raf = window.requestAnimationFrame || window.mozRequestAnimationFrame\r\n        || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\n    cancelFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;\r\n}\r\n/**\r\n * Main class exposed as fatina library\r\n *\r\n * @export\r\n * @class Fatina\r\n */\r\nclass Fatina {\r\n    constructor() {\r\n        // plugins\r\n        /**\r\n         * @export\r\n         */\r\n        this.plugin = {};\r\n        /**\r\n         * @private\r\n         */\r\n        this.loadedPlugins = [];\r\n        /**\r\n         * @private\r\n         */\r\n        this.eventCreated = [];\r\n        /**\r\n         * Settings\r\n         * @private\r\n         */\r\n        this.settings = {\r\n            logLevel: 0 /* None */,\r\n            safe: true,\r\n            smooth: false,\r\n            maxFrameDt: 50,\r\n            maxFrameNumber: 40,\r\n            maxDt: 500 // 500ms of animation\r\n        };\r\n        // properties\r\n        /**\r\n         * @readonly\r\n         */\r\n        this.version = '3.0.5';\r\n        this.time = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.dt = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.lastTime = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.initialized = false;\r\n        /**\r\n         * Pulse Animation\r\n         *\r\n         * @export\r\n         * @param {any} obj\r\n         * @param {any} settings\r\n         * @returns {ISequence}\r\n         */\r\n        this.pulse = (obj, settings) => preset_1.pulsePreset(this, obj, settings);\r\n        /**\r\n         * Strobe Animation\r\n         *\r\n         * @export\r\n         * @param {any} obj\r\n         * @param {any} settings\r\n         * @returns {ITween}\r\n         */\r\n        this.scale = (obj, settings) => preset_1.scalePreset(this, obj, settings);\r\n        /**\r\n         * Wobble Animation\r\n         *\r\n         * @export\r\n         * @param {any} obj\r\n         * @param {any} settings\r\n         * @returns {ITween}\r\n         */\r\n        this.wobble = (obj, settings) => preset_1.wobblePreset(this, obj, settings);\r\n        /**\r\n         * Sonar Animation\r\n         *\r\n         * @export\r\n         * @param {any} obj\r\n         * @param {any} settings\r\n         * @returns {ITween}\r\n         */\r\n        this.sonar = (obj, settings) => preset_1.sonarPreset(this, obj, settings);\r\n        /**\r\n         * Sonar Animation\r\n         *\r\n         * @export\r\n         * @param {any} obj\r\n         * @param {any} settings\r\n         * @returns {ISequence}\r\n         */\r\n        this.shake = (obj, settings) => preset_1.shakePreset(this, obj, settings);\r\n    }\r\n    get mainTicker() {\r\n        if (!this.initialized) {\r\n            this.init();\r\n        }\r\n        return this.manager;\r\n    }\r\n    get elapsed() {\r\n        return this.manager.elapsed;\r\n    }\r\n    /**\r\n     * Method used when Fatina is used for the first time.\r\n     * Can take few ms. (pool initialization & object creation)\r\n     *\r\n     * @export\r\n     * @param {boolean} [disableAutoTick]\r\n     * @returns {boolean}\r\n     */\r\n    init(disableAutoTick) {\r\n        if (this.initialized) {\r\n            return false;\r\n        }\r\n        if (!this.manager) {\r\n            this.manager = new ticker_1.Ticker();\r\n            this.manager.start();\r\n            this.defaultTicker = this.manager;\r\n        }\r\n        // browser init requestAnimationFrame, after onLoad() event\r\n        if (typeof (window) !== 'undefined' && !disableAutoTick) {\r\n            console.log(' %c Fatina - Tweening library for games (' + this.version + ') https://github.com/kefniark/Fatina ', 'background: #222; color: #9fbff4; padding: 5px');\r\n            this.lastTime = -1;\r\n            if (document.readyState !== 'loading') {\r\n                lastFrame = raf(this.updateLoop.bind(this));\r\n            }\r\n            else {\r\n                document.addEventListener('DOMContentLoaded', () => {\r\n                    lastFrame = raf(this.updateLoop.bind(this));\r\n                });\r\n            }\r\n        }\r\n        this.initialized = true;\r\n        return true;\r\n    }\r\n    /**\r\n     * Used to change the timescale of the whole game\r\n     *\r\n     * @export\r\n     * @param {number} scale\r\n     */\r\n    setTimescale(scale) {\r\n        this.init();\r\n        this.manager.setTimescale(scale);\r\n    }\r\n    /**\r\n     * Set the default Ticker (the one where all the new tween, sequences, ... are attached to)\r\n     *\r\n     * @param {ITicker} ticker\r\n     * @memberof Fatina\r\n     */\r\n    setDefaultTicker(ticker) {\r\n        this.defaultTicker = ticker;\r\n    }\r\n    /**\r\n     * This method pause the update loop (update are not called anymore)\r\n     *\r\n     * @export\r\n     */\r\n    pause() {\r\n        this.init();\r\n        this.manager.pause();\r\n    }\r\n    /**\r\n     * This method resume the update loop (works only if the game was paused before)\r\n     *\r\n     * @export\r\n     */\r\n    resume() {\r\n        this.init();\r\n        this.manager.resume();\r\n    }\r\n    /**\r\n     * This method kill the main ticker, the pool of tween and stop any requestAnimationFrame\r\n     *\r\n     * @export\r\n     */\r\n    destroy() {\r\n        if (this.manager) {\r\n            this.manager.kill();\r\n        }\r\n        if (lastFrame) {\r\n            cancelFrame(lastFrame);\r\n        }\r\n        this.initialized = false;\r\n    }\r\n    /**\r\n     * Method used to tick all the child (tween or sequence)\r\n     * This takes cares of recycling the old tween/sequence\r\n     *\r\n     * @export\r\n     * @param {number} timestamp\r\n     * @returns {*}\r\n     */\r\n    update(timestamp) {\r\n        if (!this.initialized || !this.manager) {\r\n            return;\r\n        }\r\n        this.manager.tick(timestamp);\r\n        this.time += timestamp;\r\n    }\r\n    /**\r\n     * Helper to create a tween (use the tween pool)\r\n     *\r\n     * @export\r\n     * @param {*} obj\r\n     * @returns {ITween}\r\n     */\r\n    tween(obj) {\r\n        const t = new tween_1.Tween(obj);\r\n        this.addContext(t);\r\n        return t;\r\n    }\r\n    /**\r\n     * Helper to create a Sequence (use the sequence pool)\r\n     *\r\n     * @export\r\n     * @param {(Tween[] | Sequence[])} [list]\r\n     * @returns {ISequence}\r\n     */\r\n    sequence(list) {\r\n        const s = new sequence_1.Sequence(list);\r\n        this.addContext(s);\r\n        return s;\r\n    }\r\n    /**\r\n     * Helper to create a Delay\r\n     *\r\n     * @export\r\n     * @param {number} duration\r\n     * @returns {IPlayable}\r\n     */\r\n    delay(duration) {\r\n        const d = new delay_1.Delay(duration);\r\n        this.addContext(d);\r\n        return d;\r\n    }\r\n    /**\r\n     * Helper used to replace usage of normal js setTimeout() by a tween\r\n     * https://www.w3schools.com/jsref/met_win_settimeout.asp\r\n     *\r\n     * @export\r\n     * @param {() => void} fn\r\n     * @param {number} duration\r\n     * @returns {IPlayable}\r\n     */\r\n    setTimeout(fn, duration) {\r\n        const timeout = new delay_1.Delay(duration).onComplete(fn);\r\n        this.addContext(timeout);\r\n        return timeout.start();\r\n    }\r\n    /**\r\n     * Helper used to replace usage of normal js setInterval() by a tween\r\n     * https://www.w3schools.com/jsref/met_win_setinterval.asp\r\n     *\r\n     * @export\r\n     * @param {() => void} fn\r\n     * @param {number} duration\r\n     * @returns {IPlayable}\r\n     */\r\n    setInterval(fn, duration) {\r\n        const interval = new delay_1.Delay(duration).onRestart(fn).setLoop(-1);\r\n        this.addContext(interval);\r\n        return interval.start();\r\n    }\r\n    /**\r\n     * Private method to set common data to every object (the parent ticker, safe mode, verbose mode)\r\n     *\r\n     * @private\r\n     * @param {(IPlayable | ITween | ISequence)} obj\r\n     */\r\n    addContext(obj) {\r\n        if (!this.initialized) {\r\n            this.init();\r\n        }\r\n        obj.setParent(this.defaultTicker);\r\n        if (this.settings.logLevel !== 0 /* None */ || !this.settings.safe) {\r\n            obj.setSettings(this.settings);\r\n        }\r\n        this.emitCreated(obj);\r\n    }\r\n    /**\r\n     * Create or Get a ticker with a defined name\r\n     * This ticker is a child of the main ticker\r\n     *\r\n     * @export\r\n     * @param {string} name\r\n     * @returns {ITicker}\r\n     */\r\n    ticker() {\r\n        if (!this.initialized) {\r\n            this.init();\r\n        }\r\n        const tick = new ticker_1.Ticker();\r\n        const handler = tick.tick.bind(tick);\r\n        tick.setParent(this.manager, handler);\r\n        this.manager.addTick(handler);\r\n        tick.start();\r\n        this.emitCreated(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    updateLoop(timestamp) {\r\n        this.dt = this.lastTime < 0 ? 16 : this.dt + timestamp - this.lastTime;\r\n        if (this.dt > this.settings.maxDt) {\r\n            console.warn(`dt too high ${Math.round(this.dt)}ms. , Capped to ${this.settings.maxDt}ms.`);\r\n            this.dt = this.settings.maxDt;\r\n        }\r\n        if (!this.settings.smooth) {\r\n            // use directly the delta time\r\n            this.update(this.dt);\r\n            this.dt = 0;\r\n        }\r\n        else {\r\n            // split high dt in multiple smaller .update()\r\n            let frame = 0;\r\n            while (this.dt > 0 && frame < this.settings.maxFrameNumber) {\r\n                const currentDt = Math.min(this.dt, this.settings.maxFrameDt);\r\n                this.update(currentDt);\r\n                this.dt -= currentDt;\r\n                frame++;\r\n            }\r\n        }\r\n        this.lastTime = timestamp;\r\n        lastFrame = raf(this.updateLoop.bind(this));\r\n    }\r\n    /**\r\n     * Initialize a plugin by passing fatina object to it\r\n     *\r\n     * @export\r\n     * @param {IPlugin} newPlugin\r\n     */\r\n    loadPlugin(newPlugin) {\r\n        newPlugin.init(this);\r\n        this.loadedPlugins.push(newPlugin);\r\n        this.info(2 /* Debug */, 'Plugin Loaded', newPlugin.name);\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    info(level, message, data) {\r\n        if (level > this.settings.logLevel) {\r\n            return;\r\n        }\r\n        if (data) {\r\n            console.log(message, data);\r\n        }\r\n        else {\r\n            console.log(message);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    emit(func, control) {\r\n        if (!this.settings.safe) {\r\n            return func(control);\r\n        }\r\n        try {\r\n            func(control);\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    emitCreated(control) {\r\n        for (const event of this.eventCreated) {\r\n            this.emit(event, control);\r\n        }\r\n    }\r\n    /**\r\n     * Add a listener method on tween/sequence creation\r\n     * (Used by plugin as a factory hook)\r\n     *\r\n     * @export\r\n     * @param {(control: IControl) => void} cb\r\n     */\r\n    addListenerCreated(cb) {\r\n        this.eventCreated.push(cb);\r\n    }\r\n    /**\r\n     * Remove a listener method on tween/sequence creation\r\n     * (Used by plugin as a factory hook)\r\n     *\r\n     * @export\r\n     * @param {(control: IControl) => void} cb\r\n     */\r\n    removeListenerCreated(cb) {\r\n        const index = this.eventCreated.indexOf(cb);\r\n        if (index !== -1) {\r\n            this.eventCreated.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * This method is used to change the log level\r\n     *\r\n     * @export\r\n     * @param {Log} level\r\n     */\r\n    setLog(level) {\r\n        this.settings.logLevel = level;\r\n    }\r\n    /**\r\n     * This method is used to enable / disable the callback try/catch\r\n     *\r\n     * @export\r\n     * @param {boolean} isSafe\r\n     */\r\n    setSafe(isSafe) {\r\n        this.settings.safe = isSafe;\r\n    }\r\n}\r\nexports.Fatina = Fatina;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EasingType = void 0;\r\nconst fatina_1 = require(\"./fatina\");\r\n/**\r\n * @export\r\n * @ignore\r\n */\r\nexports.default = new fatina_1.Fatina();\r\n/**\r\n * @export\r\n */\r\nvar easingType_1 = require(\"./easing/easingType\");\r\nObject.defineProperty(exports, \"EasingType\", { enumerable: true, get: function () { return easingType_1.EasingType; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shakePreset = exports.wobblePreset = exports.scalePreset = exports.pulsePreset = exports.sonarPreset = void 0;\r\nconst easing_1 = require(\"./easing/easing\");\r\n/**\r\n * Get Root object\r\n *\r\n * @ignore\r\n * @private\r\n * @param {*} obj\r\n * @param {string} property\r\n * @returns\r\n */\r\nfunction getRoot(obj, property) {\r\n    const path = property.split('.');\r\n    let ret = obj;\r\n    for (let i = 0; i < path.length - 1; i++) {\r\n        ret = ret[path[i]];\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Get Object Property\r\n *\r\n * @ignore\r\n * @private\r\n * @param {string} property\r\n * @returns\r\n */\r\nfunction getProp(property) {\r\n    const path = property.split('.');\r\n    return path[path.length - 1];\r\n}\r\n/**\r\n * Get Object Property object\r\n *\r\n * @ignore\r\n * @private\r\n * @param {string} property\r\n * @param {*} value\r\n * @returns\r\n */\r\nfunction getData(property, value) {\r\n    const data = {};\r\n    data[getProp(property)] = value;\r\n    return data;\r\n}\r\n/**\r\n * Sonar Preset\r\n *\r\n * @ignore\r\n * @export\r\n * @param {Fatina} fatina\r\n * @param {*} obj\r\n * @param {ISonarPresetParams} [settings]\r\n * @returns\r\n */\r\nfunction sonarPreset(fatina, obj, settings) {\r\n    const defaults = {\r\n        alpha: 'alpha',\r\n        scaleX: 'scale.x',\r\n        scaleY: 'scale.y',\r\n        amplitude: 4,\r\n        duration: 2000\r\n    };\r\n    const pa = Object.assign(Object.assign({}, defaults), (settings || {}));\r\n    const rs = getRoot(obj, pa.scaleX);\r\n    const ra = getRoot(obj, pa.alpha);\r\n    const sx = getProp(pa.scaleX);\r\n    const sy = getProp(pa.scaleY);\r\n    const alpha = getProp(pa.alpha);\r\n    const src = { x: rs[sx], y: rs[sy] };\r\n    const p = easing_1.easeNames[\"outCubic\" /* OutCubic */];\r\n    return fatina.tween({})\r\n        .to({}, pa.duration)\r\n        .onUpdate((_dt, progress) => {\r\n        ra[alpha] = 1 - easing_1.easeNames[\"inSine\" /* InSine */](progress);\r\n        rs[sx] = src.x + pa.amplitude * p(progress);\r\n        rs[sy] = src.y + pa.amplitude * p(progress);\r\n    })\r\n        .onKilled(() => {\r\n        ra[alpha] = 1;\r\n        rs[sx] = src.x;\r\n        rs[sy] = src.y;\r\n    });\r\n}\r\nexports.sonarPreset = sonarPreset;\r\n/**\r\n * Pulse Preset\r\n *\r\n * @ignore\r\n * @export\r\n * @param {Fatina} fatina\r\n * @param {*} obj\r\n * @param {IPulsePresetParams} [settings]\r\n * @returns\r\n */\r\nfunction pulsePreset(fatina, obj, settings) {\r\n    const defaults = {\r\n        alpha: 'alpha',\r\n        duration: 2000\r\n    };\r\n    const pa = Object.assign(Object.assign({}, defaults), (settings || {}));\r\n    const rootAlpha = getRoot(obj, pa.alpha);\r\n    return fatina.tween(rootAlpha)\r\n        .to(getData(pa.alpha, 0), pa.duration / 2)\r\n        .setEasing(\"inOutQuad\" /* InOutQuad */)\r\n        .toSequence()\r\n        .append(fatina.tween(rootAlpha)\r\n        .to(getData(pa.alpha, 1), pa.duration / 2)\r\n        .setEasing(\"inOutQuad\" /* InOutQuad */))\r\n        .onKilled(() => rootAlpha[getProp(pa.alpha)] = 1);\r\n}\r\nexports.pulsePreset = pulsePreset;\r\n/**\r\n * Scale Preset\r\n *\r\n * @ignore\r\n * @export\r\n * @param {Fatina} fatina\r\n * @param {*} obj\r\n * @param {IScalePresetParams} [settings]\r\n * @returns\r\n */\r\nfunction scalePreset(fatina, obj, settings) {\r\n    const defaults = {\r\n        scaleX: 'scale.x',\r\n        scaleY: 'scale.y',\r\n        amplitude: 0.5,\r\n        duration: 2000,\r\n        bounce: 5,\r\n        friction: 2,\r\n        sinX: 0\r\n    };\r\n    const pa = Object.assign(Object.assign({}, defaults), (settings || {}));\r\n    const root = getRoot(obj, pa.scaleX);\r\n    const x = getProp(pa.scaleX);\r\n    const y = getProp(pa.scaleY);\r\n    const src = { x: root[x], y: root[y] };\r\n    return fatina.tween({}).to({}, pa.duration)\r\n        .setEasing(\"inOutCubic\" /* InOutCubic */)\r\n        .onUpdate((_dt, progress) => {\r\n        const friction = Math.pow(1 - progress, pa.friction);\r\n        const p = (progress * pa.bounce) % pa.duration;\r\n        root[x] = src.x + Math.sin(pa.sinX + p * Math.PI * 2) * pa.amplitude * friction;\r\n        root[y] = src.y + Math.sin(p * Math.PI * 2) * pa.amplitude * friction;\r\n    })\r\n        .onKilled(() => {\r\n        root[x] = src.x;\r\n        root[y] = src.y;\r\n    });\r\n}\r\nexports.scalePreset = scalePreset;\r\n/**\r\n * Wobble Preset\r\n *\r\n * @ignore\r\n * @export\r\n * @param {Fatina} fatina\r\n * @param {*} obj\r\n * @param {IScalePresetParams} [settings]\r\n * @returns\r\n */\r\nfunction wobblePreset(fatina, obj, settings) {\r\n    const defaults = { sinX: Math.PI };\r\n    return scalePreset(fatina, obj, Object.assign(Object.assign({}, defaults), (settings || {})));\r\n}\r\nexports.wobblePreset = wobblePreset;\r\n/**\r\n * Shake Preset\r\n *\r\n * @ignore\r\n * @export\r\n * @param {Fatina} fatina\r\n * @param {*} obj\r\n * @param {IShakePresetParams} [settings]\r\n * @returns\r\n */\r\nfunction shakePreset(fatina, obj, settings) {\r\n    const defaults = {\r\n        posX: 'position.x',\r\n        posY: 'position.y',\r\n        amplitude: 1.5,\r\n        duration: 2000,\r\n        bounce: 10,\r\n        friction: 2\r\n    };\r\n    const pa = Object.assign(Object.assign({}, defaults), (settings || {}));\r\n    const root = getRoot(obj, pa.posX);\r\n    const x = getProp(pa.posX);\r\n    const y = getProp(pa.posY);\r\n    const src = { x: root[x], y: root[y] };\r\n    const rnd = { x: 0.5 + Math.random(), y: 0.5 + Math.random() };\r\n    return fatina.tween({})\r\n        .to({}, pa.duration)\r\n        .onUpdate((_dt, progress) => {\r\n        const friction = Math.pow(1 - progress, pa.friction);\r\n        const p = (progress * pa.bounce) % pa.duration;\r\n        root[x] = src.x + Math.sin(Math.PI + (p + rnd.x) * Math.PI * 2) * pa.amplitude * friction;\r\n        root[y] = src.y + Math.sin((p + rnd.y) * Math.PI * 2) * pa.amplitude * friction;\r\n    })\r\n        .onKilled(() => {\r\n        root[x] = src.x;\r\n        root[y] = src.y;\r\n    });\r\n}\r\nexports.shakePreset = shakePreset;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ticker = void 0;\r\n/**\r\n * Main Fatina Ticker\r\n * Parent of all the normal tween and sequence\r\n *\r\n * @export\r\n * @class Ticker\r\n * @extends {EventList}\r\n * @implements {ITicker}\r\n */\r\nclass Ticker {\r\n    constructor() {\r\n        this.state = 0 /* Idle */;\r\n        /**\r\n         * @private\r\n         */\r\n        this.timescale = 1;\r\n        this.elapsed = 0;\r\n        this.duration = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.ticks = new Set();\r\n        /**\r\n         * @private\r\n         */\r\n        this.newTicks = new Set();\r\n        /**\r\n         * @private\r\n         */\r\n        this.dt = 0;\r\n    }\r\n    setParent(parent, tick) {\r\n        this.tickCb = tick;\r\n        this.parent = parent;\r\n    }\r\n    /**\r\n     * Method used to change the timescale\r\n     *\r\n     * @param {number} scale\r\n     */\r\n    setTimescale(scale) {\r\n        this.timescale = scale;\r\n    }\r\n    /**\r\n     * Method used by the child to be updated\r\n     *\r\n     * @param {(dt: number) => void} cb\r\n     */\r\n    addTick(cb) {\r\n        this.newTicks.add(cb);\r\n    }\r\n    /**\r\n     * Method used by the child to not receive update anymore\r\n     *\r\n     * @param {(dt: number) => void} cb\r\n     */\r\n    removeTick(cb) {\r\n        if (!this.ticks.delete(cb)) {\r\n            this.newTicks.delete(cb);\r\n        }\r\n    }\r\n    /**\r\n     * Method used to tick all the child (tick listeners)\r\n     *\r\n     * @param {number} dt\r\n     * @returns\r\n     */\r\n    tick(dt) {\r\n        if (this.state !== 1 /* Run */) {\r\n            return;\r\n        }\r\n        this.dt = dt * this.timescale;\r\n        if (this.newTicks.size > 0) {\r\n            this.newTicks.forEach((tick) => this.ticks.add(tick));\r\n            this.newTicks.clear();\r\n        }\r\n        this.ticks.forEach((tick) => tick(this.dt));\r\n        this.elapsed += this.dt;\r\n    }\r\n    start() {\r\n        if (this.state === 0 /* Idle */) {\r\n            this.state = 1 /* Run */;\r\n        }\r\n    }\r\n    pause() {\r\n        if (this.state === 1 /* Run */) {\r\n            this.state = 2 /* Pause */;\r\n        }\r\n    }\r\n    resume() {\r\n        if (this.state === 2 /* Pause */) {\r\n            this.state = 1 /* Run */;\r\n        }\r\n    }\r\n    kill() {\r\n        if (this.state >= 3) {\r\n            return;\r\n        }\r\n        if (this.parent && this.tickCb) {\r\n            this.parent.removeTick(this.tickCb);\r\n        }\r\n        this.state = 4 /* Killed */;\r\n    }\r\n    skip() { }\r\n    reset() {\r\n        this.state = 0 /* Idle */;\r\n    }\r\n    get isIdle() {\r\n        return this.state === 0 /* Idle */;\r\n    }\r\n    get isRunning() {\r\n        return this.state === 1 /* Run */;\r\n    }\r\n    get isFinished() {\r\n        return this.state >= 3;\r\n    }\r\n    get isPaused() {\r\n        return this.state === 2 /* Pause */;\r\n    }\r\n}\r\nexports.Ticker = Ticker;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseTween = void 0;\r\n/**\r\n * Shared behaviors between different types of tweens and sequence\r\n * Used mostly to manage:\r\n *  - events\r\n *  - state\r\n *  - loop and restart\r\n *\r\n * @export\r\n * @abstract\r\n * @class BaseTween\r\n */\r\nclass BaseTween {\r\n    constructor() {\r\n        // events\r\n        /**\r\n         * @protected\r\n         */\r\n        this.events = {};\r\n        // public properties\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        this.elapsed = 0;\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        this.duration = 0;\r\n        /**\r\n         * Timescale of the tween\r\n         * @type {number}\r\n         * @export\r\n         */\r\n        this.timescale = 1;\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        this.state = 0 /* Idle */;\r\n        /**\r\n         * @private\r\n         */\r\n        this.first = true;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    get isIdle() {\r\n        return this.state === 0 /* Idle */;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    get isRunning() {\r\n        return this.state === 1 /* Run */;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    get isFinished() {\r\n        return this.state >= 3;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    get isPaused() {\r\n        return this.state === 2 /* Pause */;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    start() {\r\n        if (this.state !== 0 /* Idle */) {\r\n            return this;\r\n        }\r\n        if (this.first) {\r\n            this.validate();\r\n        }\r\n        else {\r\n            this.check();\r\n        }\r\n        this.state = 1 /* Run */;\r\n        this.parent.addTick(this.tickCb);\r\n        if (this.first) {\r\n            this.emitEvent(this.events.start);\r\n            this.first = false;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     * @readonly\r\n     */\r\n    reset(skipParent) {\r\n        this.state = 0 /* Idle */;\r\n        if (!skipParent) {\r\n            this.removeParent();\r\n        }\r\n        if (this.loop) {\r\n            this.loop.value = this.loop.original;\r\n        }\r\n        this.loopInit();\r\n        this.emitEvent(this.events.restart);\r\n    }\r\n    /**\r\n     * To immediately Reset a tween without stopping/restarting it\r\n     * This is faster than calling manually Reset() & Start() & Tick()\r\n     *\r\n     * @param {number} dtRemains\r\n     */\r\n    resetAndStart(dtRemains) {\r\n        this.loopInit();\r\n        this.emitEvent(this.events.restart);\r\n        this.state = 1 /* Run */;\r\n        if (dtRemains > 0) {\r\n            this.tickCb(dtRemains);\r\n        }\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setParent(ticker) {\r\n        this.removeParent();\r\n        this.parent = ticker;\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setTimescale(scale) {\r\n        this.timescale = scale;\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    pause() {\r\n        if (this.state !== 1 /* Run */) {\r\n            this.info(1 /* Info */, 'Cannot pause this tween ', this.state);\r\n            return;\r\n        }\r\n        this.state = 2 /* Pause */;\r\n        this.removeParent();\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    resume() {\r\n        if (this.state !== 2 /* Pause */) {\r\n            this.info(1 /* Info */, 'Cannot resume this tween ', this.state);\r\n            return;\r\n        }\r\n        this.state = 1 /* Run */;\r\n        this.parent.addTick(this.tickCb);\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    skip(finalValue) {\r\n        if (this.state >= 3) {\r\n            this.info(1 /* Info */, 'Cannot skip this tween ', this.state);\r\n            return;\r\n        }\r\n        if (this.state === 0 /* Idle */) {\r\n            this.emitEvent(this.events.start);\r\n        }\r\n        if (finalValue) {\r\n            const duration = this.yo ? (this.yo.value * this.duration) : 0;\r\n            this.tickCb(this.duration - this.elapsed + duration);\r\n            return;\r\n        }\r\n        this.elapsed = this.duration;\r\n        this.complete();\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    kill() {\r\n        if (this.state === 4 /* Killed */) {\r\n            this.info(1 /* Info */, 'Cannot kill this tween ', this.state);\r\n            return;\r\n        }\r\n        this.state = 4 /* Killed */;\r\n        this.removeParent();\r\n        this.emitEvent(this.events.kill);\r\n    }\r\n    /**\r\n     * Method used to define how many time the tween has to loop\r\n     * Extra: if -1 the tween will loop forever\r\n     *\r\n     * @param {number} loop\r\n     * @returns {ITween}\r\n     */\r\n    setLoop(loop) {\r\n        if (!this.loop) {\r\n            this.loop = { original: 1, value: 1 };\r\n        }\r\n        this.loop.original = Math.round(loop);\r\n        this.loop.value = this.loop.original;\r\n        return this;\r\n    }\r\n    setSettings(settings) {\r\n        if (this.settings) {\r\n            Object.assign(this.settings, settings);\r\n        }\r\n        else {\r\n            this.settings = settings;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    complete() {\r\n        if (this.state >= 3) {\r\n            this.info(1 /* Info */, 'Cannot complete this tween ', this.state);\r\n            return;\r\n        }\r\n        this.state = 3 /* Finished */;\r\n        this.removeParent();\r\n        this.emitEvent(this.events.complete);\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    removeParent() {\r\n        if (this.parent) {\r\n            this.parent.removeTick(this.tickCb);\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    check() { }\r\n    /**\r\n     * @protected\r\n     */\r\n    validate() { }\r\n    /**\r\n     * @protected\r\n     */\r\n    loopInit() {\r\n        this.elapsed = 0;\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    info(level, message, data) {\r\n        if (!this.settings || level > this.settings.logLevel) {\r\n            return;\r\n        }\r\n        console.log(message, data);\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    emit(func, args) {\r\n        if (this.settings && !this.settings.safe) {\r\n            return func.apply(this, args);\r\n        }\r\n        try {\r\n            func.apply(this, args);\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    emitEvent(listeners, args) {\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        if (listeners instanceof Array) {\r\n            for (const listener of listeners) {\r\n                this.emit(listener, args);\r\n            }\r\n        }\r\n        else {\r\n            this.emit(listeners, args);\r\n        }\r\n    }\r\n    /**\r\n     *  Callback called when the tween started\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {T}\r\n     */\r\n    onStart(cb) {\r\n        return this.onEvent('start', cb);\r\n    }\r\n    /**\r\n     * Callback called when the tween restart (loop)\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {T}\r\n     */\r\n    onRestart(cb) {\r\n        return this.onEvent('restart', cb);\r\n    }\r\n    /**\r\n     * Callback called when the tween is updated\r\n     *\r\n     * @param {(dt: number, progress: number) => void} cb\r\n     * @returns {T}\r\n     */\r\n    onUpdate(cb) {\r\n        return this.onEvent('update', cb);\r\n    }\r\n    /**\r\n     * Callback called when the tween is manually killed\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {T}\r\n     */\r\n    onKilled(cb) {\r\n        return this.onEvent('kill', cb);\r\n    }\r\n    /**\r\n     * Callback called when the tween is finished\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {T}\r\n     */\r\n    onComplete(cb) {\r\n        return this.onEvent('complete', cb);\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    onEvent(name, cb) {\r\n        if (!this.events[name]) {\r\n            this.events[name] = cb;\r\n        }\r\n        else if (this.events[name] instanceof Array) {\r\n            this.events[name].push(cb);\r\n        }\r\n        else {\r\n            this.events[name] = [this.events[name], cb];\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexports.BaseTween = BaseTween;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Callback = void 0;\r\nconst baseTween_1 = require(\"./baseTween\");\r\n/**\r\n * Fake tween used to append or join callback in a sequence\r\n *\r\n * @export\r\n * @class Callback\r\n * @extends {BaseTween}\r\n * @implements {IPlayable}\r\n */\r\nclass Callback extends baseTween_1.BaseTween {\r\n    /**\r\n     * Creates an instance of Callback.\r\n     *\r\n     * @param {() => void} cb\r\n     */\r\n    constructor(cb) {\r\n        super();\r\n        this.callback = cb;\r\n        this.tickCb = this.tick.bind(this);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {number} dt\r\n     */\r\n    tick(dt) {\r\n        this.elapsed += dt;\r\n        this.duration = 0;\r\n        this.callback();\r\n        this.emitEvent(this.events.update, [dt, 1]);\r\n        this.complete();\r\n    }\r\n}\r\nexports.Callback = Callback;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Delay = void 0;\r\nconst baseTween_1 = require(\"./baseTween\");\r\n/**\r\n * Fake tween used to delay other tweens in a sequence\r\n *\r\n * @export\r\n * @class Delay\r\n * @extends {BaseTween}\r\n * @implements {IPlayable}\r\n */\r\nclass Delay extends baseTween_1.BaseTween {\r\n    /**\r\n     * Creates an instance of Delay.\r\n     *\r\n     * @param {number} duration\r\n     */\r\n    constructor(duration) {\r\n        super();\r\n        /**\r\n         * @private\r\n         */\r\n        this.remains = 0;\r\n        this.duration = duration;\r\n        this.tickCb = this.tick.bind(this);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {number} dt\r\n     * @returns\r\n     * @memberof Delay\r\n     */\r\n    tick(dt) {\r\n        this.remains = dt * this.timescale;\r\n        while (this.remains > 0) {\r\n            this.elapsed += this.remains;\r\n            const progress = Math.max(Math.min(this.elapsed / this.duration, 1), 0);\r\n            if (this.events.update) {\r\n                this.emitEvent(this.events.update, [this.remains, progress]);\r\n            }\r\n            if (this.elapsed < this.duration) {\r\n                return;\r\n            }\r\n            this.remains = this.elapsed - this.duration;\r\n            if (this.loop) {\r\n                this.loop.value--;\r\n                if (this.loop.value !== 0) {\r\n                    this.resetAndStart(0);\r\n                    continue;\r\n                }\r\n            }\r\n            this.complete();\r\n            return;\r\n        }\r\n    }\r\n}\r\nexports.Delay = Delay;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sequence = void 0;\r\nconst baseTween_1 = require(\"./baseTween\");\r\nconst callback_1 = require(\"./callback\");\r\nconst delay_1 = require(\"./delay\");\r\n/**\r\n * Sequence: used to animate other tweens or sequence\r\n * Can play them sequentially or in parallel\r\n *\r\n * @export\r\n * @class Sequence\r\n * @extends {BaseTween}\r\n * @implements {ISequence}\r\n * @implements {ITicker}\r\n * @implements {IPlayable}\r\n */\r\nclass Sequence extends baseTween_1.BaseTween {\r\n    /**\r\n     * Creates an instance of Sequence.\r\n     *\r\n     * @param {(ITween[] | ISequence[] | IPlayable[])} [tweens]\r\n     */\r\n    constructor(tweens) {\r\n        super();\r\n        /**\r\n         * @private\r\n         */\r\n        this.evtTick = new Set();\r\n        /**\r\n         * @private\r\n         */\r\n        this.tweens = [];\r\n        /**\r\n         * @private\r\n         */\r\n        this.index = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.remains = 0;\r\n        this.tickCb = this.tick.bind(this);\r\n        if (tweens) {\r\n            this.tweens = new Array(tweens.length);\r\n            for (let i = 0; i < tweens.length; i++) {\r\n                tweens[i].setParent(this);\r\n                this.tweens[i] = [tweens[i]];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Number of tween in this sequence\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     */\r\n    get count() {\r\n        return this.tweens.length;\r\n    }\r\n    /**\r\n     * @protected\r\n     */\r\n    loopInit() {\r\n        this.index = 0;\r\n        for (const tweenArray of this.tweens) {\r\n            for (const tween of tweenArray) {\r\n                tween.reset();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Add a child to tick\r\n     *\r\n     * @param {(dt: number) => void} cb\r\n     */\r\n    addTick(cb) {\r\n        this.evtTick.add(cb);\r\n    }\r\n    /**\r\n     * Remove a child to tick\r\n     *\r\n     * @param {(dt: number) => void} cb\r\n     * @memberof Sequence\r\n     */\r\n    removeTick(cb) {\r\n        this.evtTick.delete(cb);\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    tick(dt) {\r\n        if (this.state >= 3) {\r\n            return;\r\n        }\r\n        this.remains = dt * this.timescale;\r\n        this.elapsed += this.remains;\r\n        this.localTick(this.remains);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {number} dt\r\n     * @param {boolean} [remains]\r\n     * @returns\r\n     */\r\n    localTick(dt, remains) {\r\n        // If no current tween, take the first one and start it\r\n        if (!this.cur) {\r\n            this.nextTween();\r\n        }\r\n        if (this.cur) {\r\n            // Tick every listener\r\n            this.evtTick.forEach(function (tick) { tick(dt); });\r\n            // Dont emit update event for remains dt\r\n            if (remains !== true && this.events.update) {\r\n                this.emitEvent(this.events.update, [dt, 0]);\r\n            }\r\n        }\r\n        this.remains = dt;\r\n        // Current tween over\r\n        if (this.cur) {\r\n            for (const current of this.cur) {\r\n                if (current.state !== 3 /* Finished */) {\r\n                    return;\r\n                }\r\n            }\r\n            this.remains = this.cur[0].elapsed - this.cur[0].duration;\r\n            if (this.events.stepEnd) {\r\n                this.emitEvent(this.events.stepEnd, this.cur[0]);\r\n            }\r\n            this.cur = undefined;\r\n            this.index++;\r\n            if (this.remains > 0.01) {\r\n                this.localTick(this.remains, true);\r\n                return;\r\n            }\r\n        }\r\n        // Complete\r\n        if (!this.cur && this.tweens.length === this.index) {\r\n            if (this.loop) {\r\n                this.loop.value--;\r\n                if (this.loop.value !== 0) {\r\n                    this.resetAndStart(this.remains);\r\n                    return;\r\n                }\r\n            }\r\n            this.complete();\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    nextTween() {\r\n        this.cur = this.tweens[this.index];\r\n        if (!this.cur) {\r\n            return;\r\n        }\r\n        for (const tween of this.cur) {\r\n            tween.start();\r\n        }\r\n        if (this.events.stepStart) {\r\n            this.emitEvent(this.events.stepStart, this.cur[0]);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {(ITween | ISequence)} tween\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    append(tween) {\r\n        tween.setParent(this);\r\n        this.tweens[this.tweens.length] = [tween];\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    appendCallback(cb) {\r\n        const playable = new callback_1.Callback(cb);\r\n        playable.setParent(this);\r\n        this.tweens[this.tweens.length] = [playable];\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {number} duration\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    appendInterval(duration) {\r\n        const playable = new delay_1.Delay(duration);\r\n        playable.setParent(this);\r\n        this.tweens[this.tweens.length] = [playable];\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {(ITween | ISequence)} tween\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    prepend(tween) {\r\n        tween.setParent(this);\r\n        this.tweens.unshift([tween]);\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {() => void} cb\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    prependCallback(cb) {\r\n        const playable = new callback_1.Callback(cb);\r\n        playable.setParent(this);\r\n        this.tweens.unshift([playable]);\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {number} duration\r\n     * @returns {ISequence}\r\n     * @memberof Sequence\r\n     */\r\n    prependInterval(duration) {\r\n        const playable = new delay_1.Delay(duration);\r\n        playable.setParent(this);\r\n        this.tweens.unshift([playable]);\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * @param {boolean} [finalValue]\r\n     * @returns {void}\r\n     */\r\n    skip(finalValue) {\r\n        if (this.state >= 3) {\r\n            this.info(1 /* Info */, 'Cannot skip this tween ', this.state);\r\n            return;\r\n        }\r\n        for (const tweenArray of this.tweens) {\r\n            for (const tween of tweenArray) {\r\n                if (tween.elapsed === 0) {\r\n                    this.emitEvent(this.events.stepStart, tween);\r\n                }\r\n                tween.skip(finalValue);\r\n                this.emitEvent(this.events.stepEnd, tween);\r\n            }\r\n        }\r\n        super.skip();\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    kill() {\r\n        if (this.state === 4 /* Killed */) {\r\n            this.info(1 /* Info */, 'Cannot kill this tween ', this.state);\r\n            return;\r\n        }\r\n        for (const tweenArray of this.tweens) {\r\n            for (const tween of tweenArray) {\r\n                tween.kill();\r\n            }\r\n        }\r\n        super.kill();\r\n    }\r\n    /**\r\n     * @param {(ITween | ISequence)} tween\r\n     * @returns {ISequence}\r\n     */\r\n    join(tween) {\r\n        if (this.tweens.length === 0) {\r\n            return this.append(tween);\r\n        }\r\n        tween.setParent(this);\r\n        this.tweens[this.tweens.length - 1].push(tween);\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    onStepStart(cb) {\r\n        return this.onEvent('stepStart', cb);\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    onStepEnd(cb) {\r\n        return this.onEvent('stepEnd', cb);\r\n    }\r\n}\r\nexports.Sequence = Sequence;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tween = void 0;\r\nconst easing_1 = require(\"../easing/easing\");\r\nconst baseTween_1 = require(\"./baseTween\");\r\nconst sequence_1 = require(\"./sequence\");\r\n/**\r\n * Tween: Used to animate values of an object\r\n *\r\n * @export\r\n * @class Tween\r\n * @extends {BaseTween}\r\n * @implements {ITween}\r\n */\r\nclass Tween extends baseTween_1.BaseTween {\r\n    // Creates an instance of Tween.\r\n    constructor(object) {\r\n        super();\r\n        /**\r\n         * @private\r\n         */\r\n        this.prop = [];\r\n        // options\r\n        /**\r\n         * @private\r\n         */\r\n        this.steps = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.relative = false;\r\n        // cache\r\n        /**\r\n         * @private\r\n         */\r\n        this.p = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.v = 0;\r\n        /**\r\n         * @private\r\n         */\r\n        this.remains = 0;\r\n        this.obj = object;\r\n        this.tickCb = this.tick.bind(this);\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    init(object) {\r\n        this.obj = object;\r\n        this.prop.length = 0;\r\n    }\r\n    /**\r\n     * Method used on start to check the values of this tween\r\n     *\r\n     * @protected\r\n     */\r\n    validate() {\r\n        // Check the object\r\n        if (!this.obj) {\r\n            throw new Error('undefined object');\r\n        }\r\n        // Check this tween will be updated\r\n        if (!this.parent) {\r\n            throw new Error('no ticker');\r\n        }\r\n        // Easing\r\n        if (!this.ease) {\r\n            this.ease = easing_1.easeNames[\"linear\" /* Linear */];\r\n        }\r\n        this.check();\r\n    }\r\n    /**\r\n     * Method used to calculate currentFrom/currentTo based on the config\r\n     *\r\n     * @protected\r\n     */\r\n    check() {\r\n        if (!this.cf) {\r\n            this.cf = {};\r\n        }\r\n        if (!this.ct) {\r\n            this.ct = {};\r\n        }\r\n        for (const prop of this.prop) {\r\n            // From\r\n            if (!this.f) {\r\n                this.cf[prop] = this.obj[prop];\r\n            }\r\n            else {\r\n                this.cf[prop] = this.f[prop];\r\n                this.obj[prop] = this.f[prop];\r\n            }\r\n            // Relative\r\n            if (this.relative) {\r\n                this.ct[prop] = this.obj[prop] + this.t[prop];\r\n            }\r\n            else {\r\n                this.ct[prop] = this.t[prop];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    tick(dt) {\r\n        if (this.state >= 3) {\r\n            return;\r\n        }\r\n        this.remains = dt * this.timescale;\r\n        while (this.remains > 0) {\r\n            this.elapsed += this.remains;\r\n            this.p = Math.max(Math.min(this.elapsed / this.duration, 1), 0);\r\n            this.v = this.ease(this.p);\r\n            // Yoyo easing (need to be reversed)\r\n            if (this.yo && (this.yo.original - this.yo.value) % 2 === 1) {\r\n                this.v = 1 - this.ease(1 - this.p);\r\n            }\r\n            // Steps behaviour\r\n            if (this.steps !== 0) {\r\n                this.v = Math.round(this.v * this.steps) / this.steps;\r\n            }\r\n            // Update if the object still exist\r\n            for (const prop of this.prop) {\r\n                this.obj[prop] = this.cf[prop] + (this.ct[prop] - this.cf[prop]) * this.v;\r\n            }\r\n            if (this.events.update) {\r\n                this.emitEvent(this.events.update, [this.remains, this.p]);\r\n            }\r\n            if (this.elapsed < this.duration) {\r\n                return;\r\n            }\r\n            this.remains = this.elapsed - this.duration;\r\n            // Yoyo effect ( A -> B -> A )\r\n            if (this.yo && this.yo.value !== 0) {\r\n                this.reverse();\r\n                this.resetAndStart(0);\r\n                this.yo.value--;\r\n                continue;\r\n            }\r\n            // Loop management\r\n            if (this.loop) {\r\n                this.loop.value--;\r\n                if (this.loop.value !== 0) {\r\n                    this.check();\r\n                    this.resetAndStart(0);\r\n                    continue;\r\n                }\r\n            }\r\n            this.complete();\r\n            return;\r\n        }\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    from(from) {\r\n        this.f = from;\r\n        this.updateProp();\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    to(to, duration) {\r\n        this.t = to;\r\n        this.duration = duration;\r\n        this.updateProp();\r\n        return this;\r\n    }\r\n    /**\r\n     * Compute the properties\r\n     *\r\n     * @private\r\n     */\r\n    updateProp() {\r\n        if (!this.obj) {\r\n            return;\r\n        }\r\n        for (const index in this.t) {\r\n            if (this.t.hasOwnProperty(index)) {\r\n                this.prop.push(index);\r\n            }\r\n        }\r\n        this.prop.filter((el, i, a) => i === a.indexOf(el));\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setRelative(relative) {\r\n        this.relative = relative;\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    modify(diff, updateTo) {\r\n        for (const prop of this.prop) {\r\n            if (!diff.hasOwnProperty(prop)) {\r\n                continue;\r\n            }\r\n            this.obj[prop] += diff[prop];\r\n            if (updateTo) {\r\n                this.ct[prop] += diff[prop];\r\n            }\r\n            else {\r\n                this.cf[prop] += diff[prop];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Overwrite the Reset (just for yoyo)\r\n     *\r\n     * @param {boolean} [skipParent]\r\n     */\r\n    reset(skipParent) {\r\n        if (this.yo) {\r\n            if ((this.yo.original - this.yo.value) % 2 === 1) {\r\n                let previous = this.cf;\r\n                this.cf = this.ct;\r\n                this.ct = previous;\r\n                previous = this.f;\r\n                this.f = this.t;\r\n                this.t = previous;\r\n                const elapsed = (1 - (this.elapsed / this.duration)) * this.duration;\r\n                this.elapsed = Math.round(elapsed * 1000) / 1000;\r\n            }\r\n            this.yo.value = this.yo.original;\r\n        }\r\n        super.reset(skipParent);\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    reverse() {\r\n        let previous = this.cf;\r\n        this.cf = this.ct;\r\n        this.ct = previous;\r\n        previous = this.f;\r\n        this.f = this.t;\r\n        this.t = previous;\r\n        const elapsed = (1 - (this.elapsed / this.duration)) * this.duration;\r\n        this.elapsed = Math.round(elapsed * 1000) / 1000;\r\n        if (this.state === 3 /* Finished */) {\r\n            this.reset(true);\r\n            this.start();\r\n        }\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    yoyo(time) {\r\n        if (!this.yo) {\r\n            this.yo = { original: 0, value: 0 };\r\n        }\r\n        this.yo.original = time;\r\n        this.yo.value = time;\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setSteps(steps) {\r\n        this.steps = steps;\r\n        return this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    toSequence() {\r\n        if (!this.parent) {\r\n            throw new Error('parent ticker not defined');\r\n        }\r\n        return new sequence_1.Sequence().setParent(this.parent).append(this);\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setEasing(type) {\r\n        if (!(type in easing_1.easeNames)) {\r\n            throw new Error(`unknown easing method ${type}`);\r\n        }\r\n        this.ease = easing_1.easeNames[type];\r\n        return this;\r\n    }\r\n    /**\r\n     * Method used when the tween is reset (loop)\r\n     *\r\n     * @protected\r\n     */\r\n    loopInit() {\r\n        this.elapsed = 0;\r\n    }\r\n}\r\nexports.Tween = Tween;\r\n"],"sourceRoot":""}